name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        emacs-version:
          - '26.1'
          - '26.3'
          - '27.1'
          - '27.2'
          - '28.1'
          - '28.2'
          - '29.1'
          - '29.2'
          - '29.3'
          - 'snapshot'
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Emacs
      uses: purcell/setup-emacs@master
      with:
        version: ${{ matrix.emacs-version }}

    - name: Install dependencies
      run: |
        emacs --version
        # Create minimal package initialization
        mkdir -p ~/.emacs.d
        echo "(require 'package)" > ~/.emacs.d/init.el
        echo "(add-to-list 'package-archives '(\"melpa\" . \"https://melpa.org/packages/\") t)" >> ~/.emacs.d/init.el
        echo "(package-initialize)" >> ~/.emacs.d/init.el
        
        # Install dependencies if available
        emacs -batch -l ~/.emacs.d/init.el \
          --eval "(package-refresh-contents)" \
          --eval "(ignore-errors (package-install 'toml))" \
          --eval "(ignore-errors (package-install 'async))" \
          --eval "(ignore-errors (package-install 'undercover))"

    - name: Byte compile
      run: |
        emacs -batch -L . \
          --eval "(setq byte-compile-error-on-warn t)" \
          -f batch-byte-compile *.el

    - name: Run tests
      run: |
        emacs -batch -L . -L test \
          --eval "(require 'ert)" \
          --eval "(setq ert-batch-backtrace-right-margin 200)" \
          -l test/bfepm-test.el \
          -l test/bfepm-config-test.el \
          -l test/bfepm-utils-test.el \
          -f ert-run-tests-batch-and-exit

    - name: Package lint
      run: |
        emacs -batch -L . \
          --eval "(require 'package)" \
          --eval "(add-to-list 'package-archives '(\"melpa\" . \"https://melpa.org/packages/\") t)" \
          --eval "(package-initialize)" \
          --eval "(package-refresh-contents)" \
          --eval "(package-install 'package-lint)" \
          --eval "(require 'package-lint)" \
          --eval "(package-lint-batch-and-exit)" \
          bfepm.el

    - name: Checkdoc
      run: |
        emacs -batch -L . \
          --eval "(checkdoc-file \"bfepm.el\")" \
          --eval "(checkdoc-file \"bfepm-core.el\")" \
          --eval "(checkdoc-file \"bfepm-config.el\")" \
          --eval "(checkdoc-file \"bfepm-utils.el\")" \
          --eval "(checkdoc-file \"bfepm-package.el\")" \
          --eval "(checkdoc-file \"bfepm-lock.el\")"

  test-with-coverage:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Emacs
      uses: purcell/setup-emacs@master
      with:
        version: '29.3'

    - name: Install dependencies with coverage
      run: |
        emacs --version
        mkdir -p ~/.emacs.d
        echo "(require 'package)" > ~/.emacs.d/init.el
        echo "(add-to-list 'package-archives '(\"melpa\" . \"https://melpa.org/packages/\") t)" >> ~/.emacs.d/init.el
        echo "(package-initialize)" >> ~/.emacs.d/init.el
        
        emacs -batch -l ~/.emacs.d/init.el \
          --eval "(package-refresh-contents)" \
          --eval "(package-install 'undercover)" \
          --eval "(ignore-errors (package-install 'toml))" \
          --eval "(ignore-errors (package-install 'async))"

    - name: Run tests with coverage
      run: |
        emacs -batch -L . -L test \
          --eval "(require 'undercover)" \
          --eval "(undercover \"*.el\" (:exclude \"test/*.el\"))" \
          --eval "(require 'ert)" \
          -l test/bfepm-test.el \
          -l test/bfepm-config-test.el \
          -l test/bfepm-utils-test.el \
          -f ert-run-tests-batch-and-exit

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage-final.json
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false